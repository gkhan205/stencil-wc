/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppFilter {
        "data": any[];
        "theme": string;
    }
    interface AppInput {
        "field": string;
        "placeholder": string;
        "type": string;
    }
    interface AppList {
        "data": any[];
    }
    interface AppSelectInput {
        "dropdownData": any[];
        "field": string;
        "placeholder": string;
        "type": string;
    }
}
declare global {
    interface HTMLAppFilterElement extends Components.AppFilter, HTMLStencilElement {
    }
    var HTMLAppFilterElement: {
        prototype: HTMLAppFilterElement;
        new (): HTMLAppFilterElement;
    };
    interface HTMLAppInputElement extends Components.AppInput, HTMLStencilElement {
    }
    var HTMLAppInputElement: {
        prototype: HTMLAppInputElement;
        new (): HTMLAppInputElement;
    };
    interface HTMLAppListElement extends Components.AppList, HTMLStencilElement {
    }
    var HTMLAppListElement: {
        prototype: HTMLAppListElement;
        new (): HTMLAppListElement;
    };
    interface HTMLAppSelectInputElement extends Components.AppSelectInput, HTMLStencilElement {
    }
    var HTMLAppSelectInputElement: {
        prototype: HTMLAppSelectInputElement;
        new (): HTMLAppSelectInputElement;
    };
    interface HTMLElementTagNameMap {
        "app-filter": HTMLAppFilterElement;
        "app-input": HTMLAppInputElement;
        "app-list": HTMLAppListElement;
        "app-select-input": HTMLAppSelectInputElement;
    }
}
declare namespace LocalJSX {
    interface AppFilter {
        "data"?: any[];
        "onFilterApplied"?: (event: CustomEvent<any>) => void;
        "theme"?: string;
    }
    interface AppInput {
        "field"?: string;
        "onInputChanged"?: (event: CustomEvent<any>) => void;
        "placeholder"?: string;
        "type"?: string;
    }
    interface AppList {
        "data"?: any[];
    }
    interface AppSelectInput {
        "dropdownData"?: any[];
        "field"?: string;
        "onSelectChanged"?: (event: CustomEvent<any>) => void;
        "placeholder"?: string;
        "type"?: string;
    }
    interface IntrinsicElements {
        "app-filter": AppFilter;
        "app-input": AppInput;
        "app-list": AppList;
        "app-select-input": AppSelectInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-filter": LocalJSX.AppFilter & JSXBase.HTMLAttributes<HTMLAppFilterElement>;
            "app-input": LocalJSX.AppInput & JSXBase.HTMLAttributes<HTMLAppInputElement>;
            "app-list": LocalJSX.AppList & JSXBase.HTMLAttributes<HTMLAppListElement>;
            "app-select-input": LocalJSX.AppSelectInput & JSXBase.HTMLAttributes<HTMLAppSelectInputElement>;
        }
    }
}
